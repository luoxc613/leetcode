public class Solution {
    public int longestValidParentheses(String s) {
        int max=0,left=-1;
        if(s==null || s.length()==0||s.length()==1)
            return max;
        int n=s.length();
        int i=0;
        Stack <Integer> stack= new Stack<> ();
        while(i<n)
        {
            if(s.charAt(i)=='(')
                {
                    stack.push(i);
                }
            else
                {
                    if(stack.isEmpty())
                         {
                          
                             left=i;
                         }
                    else
                       {stack.pop();
                           if(stack.isEmpty())
                           {
                               max=Math.max(max,i-left);
                           }
                           
                           else
                                max=Math.max(max,i-stack.peek());
                       }
                }
      
            i++;
        }

        return max;
    }
}
